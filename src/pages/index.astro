---
import Layout from "../layouts/Layout.astro";

export const prerender = false;

let errors = { name: "", email: "", message: "" };
let successMessage = "";
let errorMessage = "";

if (Astro.request.method === "POST") {
  try {
    const data = await Astro.request.formData();
    const name = data.get("name") as string;
    const email = data.get("email") as string;
    const message = data.get("message") as string;

    // 基本驗證
    if (!name || name.trim().length < 2) {
      errors.name = "請輸入有效的姓名";
    }
    
    if (!email || !email.includes("@")) {
      errors.email = "請輸入有效的電子郵件";
    }
    
    if (!message || message.trim().length < 10) {
      errors.message = "訊息內容至少需要10個字符";
    }

    // 檢查是否有錯誤
    const hasErrors = Object.values(errors).some(error => error !== "");

    if (!hasErrors) {
      // 直接在這裡處理郵件發送
      const nodemailer = await import("nodemailer");
      
      let transporter = nodemailer.default.createTransporter({
        host: process.env.EMAIL_HOST,
        port: Number(process.env.EMAIL_PORT),
        secure: false,
        auth: {
          user: process.env.EMAIL,
          pass: process.env.EMAIL_PASS,
        },
      });

      let emailMessage = {
        from: process.env.EMAIL,
        to: process.env.EMAIL,
        subject: `網站聯絡表單 - 來自 ${name.trim()}`,
        html: `
          <h2>來自網站的聯絡訊息</h2>
          <p><strong>姓名：</strong> ${name.trim()}</p>
          <p><strong>電子郵件：</strong> ${email.trim()}</p>
          <p><strong>訊息內容：</strong></p>
          <p>${message.trim().replace(/\n/g, '<br>')}</p>
        `,
      };

      await transporter.sendMail(emailMessage);
      successMessage = "訊息已成功發送！我們將盡快回覆您。";
      
      // 清空錯誤訊息
      errors = { name: "", email: "", message: "" };
    }

  } catch (error) {
    console.error('Email sending error:', error);
    errorMessage = "發送訊息時出錯，請稍後再試。";
  }
}
---
<Layout title="首頁 | 公司名稱">
  <!-- 頂部固定導航欄 -->
  <header class="fixed top-0 left-0 right-0 z-50 flex justify-center px-4 py-4">
    <!-- 灰色圓角背景條 (設置最大寬度) -->
    <div
      class="bg-gray-600 rounded-full flex justify-between items-center px-6 py-2 max-w-5xl w-full"
    >
      <!-- 左側 LOGO -->
      <div class="logo-container">
        <div class="text-white text-2xl font-bold">LOGO</div>
      </div>

      <!-- 右側導航選單 -->
      <nav class="main-nav">
        <ul class="flex">
          <li>
            <a href="/about"
              class="px-5 py-2 block text-white hover:text-blue-200 transition-colors"
              >認識我們</a
            >
          </li>
          <li>
            <a href="/products"
              class="px-5 py-2 block text-white hover:text-blue-200 transition-colors"
              >產品介紹</a
            >
          </li>
          <li>
            <a href="/services"
              class="px-5 py-2 block text-white hover:text-blue-200 transition-colors"
              >服務領域</a
            >
          </li>
          <li>
            <a href="/contact"
              class="px-5 py-2 block text-white hover:text-blue-200 transition-colors"
              >聯絡我們</a
            >
          </li>
        </ul>
      </nav>
    </div>
  </header>

  <!-- 全屏背景和中央內容 -->
  <main
    class="h-screen w-full bg-black flex flex-col justify-center items-center relative"
  >
    <!-- 中央內容 -->
    <div class="z-10 text-center max-w-2xl px-4">
      <h1 class="text-5xl font-bold text-white mb-4">一段文字大標</h1>
      <p class="text-xl text-gray-300 mb-8">
        還有一些次要文案、跟一些華而不實的文字們（應該）
      </p>
    </div>

    <!-- 向下滾動按鈕 -->
    <div class="absolute bottom-10 left-1/2 transform -translate-x-1/2 z-10">
      <button
        id="scroll-down"
        class="bg-white rounded-full px-6 py-2 text-black font-bold hover:bg-opacity-90 transition-all"
      >
        SCROLL
      </button>
    </div>
  </main>

  <!-- 內容區塊 -->
  <section id="content-section" class="bg-gray-100 py-20">
    <div class="container mx-auto px-4">
      <h2 class="text-3xl font-bold text-center mb-12 text-black">企業簡介</h2>

      <div class="max-w-4xl mx-auto">
        <p class="text-lg mb-6 text-black">
          青山依舊在，幾度夕陽紅。慣看秋月春風。一壺濁酒喜相逢，浪花淘盡英雄。是非成敗轉頭空，滾滾長江東逝水，白髮漁樵江渚上，古今多少事，都付笑談中。
        </p>
        <p class="text-lg mb-6 text-black">
          青山依舊在，幾度夕陽紅。慣看秋月春風。一壺濁酒喜相逢，浪花淘盡英雄。是非成敗轉頭空，滾滾長江東逝水，白髮漁樵江渚上，古今多少事，都付笑談中。
        </p>
        <div
          class="intro-carousel-container slider-container relative max-w-4xl mx-auto h-80 bg-gray-700 rounded-xl overflow-hidden"
        >
          <!-- 輪播項目 -->
          <div
            class="intro-carousel-item absolute inset-0 opacity-100 transition-opacity duration-1000 flex items-center justify-center"
          >
            <p class="text-white text-xl">圖片自動更換 1</p>
          </div>
          <div
            class="intro-carousel-item absolute inset-0 opacity-0 transition-opacity duration-1000 flex items-center justify-center"
          >
            <p class="text-white text-xl">圖片自動更換 2</p>
          </div>
          <div
            class="intro-carousel-item absolute inset-0 opacity-0 transition-opacity duration-1000 flex items-center justify-center"
          >
            <p class="text-white text-xl">圖片自動更換 3</p>
          </div>

          <!-- 輪播控制點 -->
          <div
            class="absolute bottom-4 left-0 right-0 flex justify-center space-x-2"
          >
            <button
              data-slide="0"
              class="intro-carousel-dot w-3 h-3 rounded-full bg-white"></button>
            <button
              data-slide="1"
              class="intro-carousel-dot w-3 h-3 rounded-full bg-gray-400"
            ></button>
            <button
              data-slide="2"
              class="intro-carousel-dot w-3 h-3 rounded-full bg-gray-400"
            ></button>
          </div>
        </div>
      </div>
    </div>
  </section>

  <!-- 圖片自動輪播區塊 -->
  <section class="py-20 bg-gray-800">
    <div class="container mx-auto px-4">
      <h2 class="text-4xl font-bold text-gray-300 text-center mb-6">
        產品介紹
      </h2>
      <div class="w-16 h-1 bg-gray-500 mx-auto mb-12"></div>

      <div class="max-w-4xl mx-auto text-center mb-16">
        <p class="text-lg text-gray-300 leading-relaxed">
          青山依舊在，幾度夕陽紅。慣看秋月春風。一壺濁酒喜相逢，浪花淘盡英雄。是非成敗轉頭空，滾滾長江東逝水，白髮漁樵江渚上，古今多少事，都付笑談中。
        </p>
      </div>

      <!-- 產品特色部分 -->
      <div class="grid grid-cols-1 gap-8">
        <div class="flex justify-center">
          <div
            class="color-gallery-container flex rounded-lg overflow-hidden relative"
          >
            <div
              class="color-gallery flex transition-all duration-500"
              id="color-slider"
            >
            </div>
          </div>
        </div>

        <div class="text-center mt-2">
          <h3 class="text-2xl font-bold text-gray-300">產品特色</h3>
        </div>
      </div>
    </div>
  </section>

<!-- 服務領域區塊 -->
<section class="py-20 bg-gray-100">
  <div class="container mx-auto px-4">
    <h2 class="text-3xl font-bold text-center mb-12 text-black">服務領域</h2>

    <div class="grid grid-cols-1 md:grid-cols-3 gap-8">
      {
        [1, 2, 3].map((i) => (
          <div class="service-card p-6 border border-gray-300 rounded-lg hover:shadow-lg transition-all">
            <div class="w-full h-40 bg-gray-300 rounded-lg mb-4" />
            <h3 class="text-xl font-semibold mb-2 text-black">服務項目 {i}</h3>
            <p class="text-gray-600">
              服務項目的簡短描述，介紹主要特點和優勢。
            </p>
          </div>
        ))
      }
    </div>
  </div>
</section>

<!-- 聯絡我們區塊 -->
<section class="py-20 bg-gray-800 text-white relative">
  <div
    class="absolute bottom-2 left-0 contact-title font-sans mb-[-20px]"
    style="line-height: 0.8;"
  >
    <h2 class="text-6xl lg:text-9xl font-bold text-gray-100 pl-0 lg:pl-0">
      Contact us
    </h2>
  </div>

  <div class="container mx-auto px-4">
    <div class="max-w-4xl mx-auto grid grid-cols-1 md:grid-cols-2 gap-12">
      <div>
        <h3 class="text-xl font-semibold mb-4">聯絡資訊</h3>
        <div class="space-y-4">
          <p class="flex items-center">
            <svg
              class="w-5 h-5 mr-3"
              fill="none"
              stroke="currentColor"
              viewBox="0 0 24 24"
            >
              <path
                stroke-linecap="round"
                stroke-linejoin="round"
                stroke-width="2"
                d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z"
              ></path>
              <path
                stroke-linecap="round"
                stroke-linejoin="round"
                stroke-width="2"
                d="M15 11a3 3 0 11-6 0 3 3 0 016 0z"></path>
            </svg>
            台北市中山區南京東路二段123號8樓
          </p>
          <p class="flex items-center">
            <svg
              class="w-5 h-5 mr-3"
              fill="none"
              stroke="currentColor"
              viewBox="0 0 24 24"
            >
              <path
                stroke-linecap="round"
                stroke-linejoin="round"
                stroke-width="2"
                d="M3 5a2 2 0 012-2h3.28a1 1 0 01.948.684l1.498 4.493a1 1 0 01-.502 1.21l-2.257 1.13a11.042 11.042 0 005.516 5.516l1.13-2.257a1 1 0 011.21-.502l4.493 1.498a1 1 0 01.684.949V19a2 2 0 01-2 2h-1C9.716 21 3 14.284 3 6V5z"
              ></path>
            </svg>
            (02) 2345-6789
          </p>
          <p class="flex items-center">
            <svg
              class="w-5 h-5 mr-3"
              fill="none"
              stroke="currentColor"
              viewBox="0 0 24 24"
            >
              <path
                stroke-linecap="round"
                stroke-linejoin="round"
                stroke-width="2"
                d="M3 8l7.89 5.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z"
              ></path>
            </svg>
            contact@company.com
          </p>
        </div>
      </div>

      <div>
        <h3 class="text-xl font-semibold mb-4">傳送訊息</h3>
        
        <!-- 顯示成功或錯誤訊息 -->
        {successMessage && (
          <div class="mb-4 p-3 bg-green-600 text-white rounded-lg">
            {successMessage}
          </div>
        )}
        
        {errorMessage && (
          <div class="mb-4 p-3 bg-red-600 text-white rounded-lg">
            {errorMessage}
          </div>
        )}

        <form method="POST" enctype="application/x-www-form-urlencoded" class="space-y-4">
          <div>
            <input
              type="text"
              name="name"
              placeholder="姓名"
              class="w-full p-2 rounded bg-gray-700 text-white"
              required
            />
            {errors.name && (
              <p class="text-red-400 text-sm mt-1">{errors.name}</p>
            )}
          </div>
          <div>
            <input
              type="email"
              name="email"
              placeholder="電子郵件"
              class="w-full p-2 rounded bg-gray-700 text-white"
              required
            />
            {errors.email && (
              <p class="text-red-400 text-sm mt-1">{errors.email}</p>
            )}
          </div>
          <div>
            <textarea
              name="message"
              rows="4"
              placeholder="訊息內容"
              class="w-full p-2 rounded bg-gray-700 text-white"
              required></textarea>
            {errors.message && (
              <p class="text-red-400 text-sm mt-1">{errors.message}</p>
            )}
          </div>

          <button type="submit" class="bg-blue-600 text-white px-6 py-2 rounded hover:bg-blue-700 transition-colors">
            送出
          </button>
        </form>
      </div>
    </div>
  </div>
</section>

<!-- 頁腳 -->
<footer class="bg-black text-gray-400 py-2">
  <div class="text-center text-xs text-gray-500">
    <p>Copyright © 2025 Yasmine n Coi</p>
  </div>
</footer>

<!-- 保留所有原有樣式和腳本 -->
<style>
  .form-submit-transition {
    transition: all 0.3s ease-in-out;
  }

  .form-submit-success {
    animation: success-pulse 1.5s ease-in-out;
  }

  @keyframes success-pulse {
    0% {
      transform: scale(1);
    }
    50% {
      transform: scale(1.02);
      box-shadow: 0 0 20px rgba(52, 211, 153, 0.4);
    }
    100% {
      transform: scale(1);
    }
  }

  .form-submit-error {
    animation: error-shake 0.5s ease-in-out;
  }

  @keyframes error-shake {
    0% {
      transform: translateX(0);
    }
    25% {
      transform: translateX(-10px);
    }
    50% {
      transform: translateX(10px);
    }
    75% {
      transform: translateX(-10px);
    }
    100% {
      transform: translateX(0);
    }
  }

  .color-gallery-container {
    width: auto;
    overflow: hidden;
    position: relative;
    transition: all 0.5s ease;
    perspective: 1000px;
    height: 300px;
    background-color: rgba(0, 0, 0, 0.1);
    border-radius: 8px;
    margin: 0 auto;
    width: 80vw;
  }

  .color-gallery-container.expanded {
    max-width: 100%;
    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);
  }

  .color-gallery {
    display: flex;
    width: 100%;
    height: 100%;
    position: relative;
  }

  .color-item {
    transition: all 0.5s ease;
    cursor: pointer;
    min-width: 4rem;
    position: absolute;
    border-radius: 8px;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.3);
    overflow: hidden;
  }

  .color-item.active-item {
    box-shadow: 0 8px 16px rgba(0, 0, 0, 0.5);
  }

  .color-item:hover {
    transform: scale(1.05);
  }

  .stack-prev-btn,
  .stack-next-btn {
    width: 40px;
    height: 40px;
    font-size: 20px;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    transition: all 0.3s ease;
    opacity: 0.7;
  }

  .stack-prev-btn:hover,
  .stack-next-btn:hover {
    background-color: rgba(0, 0, 0, 0.7);
    opacity: 1;
  }

  .left-stack-counter,
  .right-stack-counter {
    font-size: 14px;
    font-weight: bold;
    padding: 4px 8px;
    background-color: rgba(0, 0, 0, 0.6);
    border-radius: 4px;
    margin: 8px;
  }

  @keyframes pulse {
    0% {
      transform: scale(1);
    }
    50% {
      transform: scale(1.05);
    }
    100% {
      transform: scale(1);
    }
  }

  .color-item.active {
    animation: pulse 2s infinite;
    z-index: 10;
  }

  .contact-title {
    line-height: 0.8;
    margin-left: -0.5rem;
  }

  @media (max-width: 768px) {
    .color-gallery-container {
      max-width: 90vw;
      height: 250px;
    }

    .color-item {
      min-width: 2.5rem;
    }

    .stack-prev-btn,
    .stack-next-btn {
      width: 30px;
      height: 30px;
      font-size: 16px;
    }

    .contact-title {
      margin-left: -0.25rem;
    }
  }
</style>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    // 滾動按鈕功能
    const scrollButton = document.getElementById("scroll-down");
    const contentSection = document.getElementById("content-section");
    if (scrollButton && contentSection) {
      scrollButton.addEventListener("click", () => {
        contentSection.scrollIntoView({ behavior: "smooth" });
      });
    }

    // 企業簡介輪播功能
    const introCarouselItems = document.querySelectorAll(".intro-carousel-item");
    const introCarouselDots = document.querySelectorAll(".intro-carousel-dot");

    if (introCarouselItems.length > 0 && introCarouselDots.length > 0) {
      let introCurrentSlide = 0;
      let introAutoSlideInterval;

      introCarouselDots.forEach((dot, index) => {
        dot.addEventListener("click", () => {
          showIntroSlide(index);
        });
      });

      function showIntroSlide(index) {
        introCarouselItems.forEach((item) => {
          item.classList.remove("opacity-100");
          item.classList.add("opacity-0");
        });

        introCarouselDots.forEach((dot) => {
          dot.classList.remove("bg-white");
          dot.classList.add("bg-gray-400");
        });

        if (introCarouselItems[index]) {
          introCarouselItems[index].classList.remove("opacity-0");
          introCarouselItems[index].classList.add("opacity-100");
        }

        if (introCarouselDots[index]) {
          introCarouselDots[index].classList.remove("bg-gray-400");
          introCarouselDots[index].classList.add("bg-white");
        }

        introCurrentSlide = index;
      }

      function introAutoSlide() {
        let nextSlide = (introCurrentSlide + 1) % introCarouselItems.length;
        showIntroSlide(nextSlide);
      }

      introAutoSlideInterval = setInterval(introAutoSlide, 5000);

      const introCarouselContainer = document.querySelector(".intro-carousel-container");
      if (introCarouselContainer) {
        introCarouselContainer.addEventListener("mouseenter", () => {
          clearInterval(introAutoSlideInterval);
        });

        introCarouselContainer.addEventListener("mouseleave", () => {
          introAutoSlideInterval = setInterval(introAutoSlide, 5000);
        });
      }
    }

    // 顏色圖庫功能
    const initColorGallery = () => {
      const colorGalleryContainer = document.querySelector(".color-gallery-container");
      const colorSlider = document.getElementById("color-slider");

      if (!colorSlider || !colorGalleryContainer) return;

      colorSlider.innerHTML = "";

      const colorItems = [
        { index: 0, color: "bg-gray-200" },
        { index: 1, color: "bg-gray-300" },
        { index: 2, color: "bg-gray-400" },
        { index: 3, color: "bg-gray-500" },
        { index: 4, color: "bg-gray-600" },
        { index: 5, color: "bg-gray-700" },
        { index: 6, color: "bg-gray-800" },
        { index: 7, color: "bg-blue-500" },
        { index: 8, color: "bg-blue-600" },
        { index: 9, color: "bg-blue-700" },
      ];

      colorItems.forEach((item) => {
        const colorItem = document.createElement("div");
        colorItem.className = `color-item ${item.color} cursor-pointer`;
        colorItem.setAttribute("data-index", item.index);

        const label = document.createElement("span");
        label.className = "text-white font-bold flex items-center justify-center h-full";
        label.textContent = item.index + 1;
        colorItem.appendChild(label);

        colorSlider.appendChild(colorItem);
      });

      const colorItemElements = document.querySelectorAll(".color-item");
      let activeColorIndex = 0;
      let autoSlideInterval;

      const startAutoSlide = () => {
        autoSlideInterval = setInterval(() => {
          const nextIndex = (activeColorIndex + 1) % colorItemElements.length;
          updateActiveColor(nextIndex);
        }, 5000);
      };

      const stopAutoSlide = () => {
        clearInterval(autoSlideInterval);
      };

      function updateStackLayout(currentIndex) {
        const totalItems = colorItemElements.length;
        const centerX = colorGalleryContainer.offsetWidth / 2;
        const activeWidth = colorGalleryContainer.offsetWidth * 0.6;
        const stackItemWidth = 40;
        const stackItemOffset = 10;
        const stackItemOpacity = 0.8;

        colorItemElements.forEach((item) => {
          item.style.position = "absolute";
          item.style.width = `${stackItemWidth}px`;
          item.style.height = "100%";
          item.style.opacity = stackItemOpacity;
          item.style.transition = "all 0.5s ease";
          item.style.transform = "translateX(0) scale(0.8)";
          item.style.zIndex = "1";
          item.classList.remove("active-item");
        });

        const activeItem = colorItemElements[currentIndex];
        if (activeItem) {
          activeItem.style.width = `${activeWidth}px`;
          activeItem.style.left = `${centerX - activeWidth / 2}px`;
          activeItem.style.opacity = "1";
          activeItem.style.zIndex = "10";
          activeItem.style.transform = "scale(1)";
          activeItem.classList.add("active-item");
        }

        const leftStackCount = currentIndex;
        for (let i = 0; i < leftStackCount; i++) {
          const leftItem = colorItemElements[i];
          const distanceFromActive = currentIndex - i;
          const offset = stackItemOffset * distanceFromActive;
          const zIndex = 5 - distanceFromActive;
          const opacity = Math.max(0.3, stackItemOpacity - 0.1 * distanceFromActive);

          leftItem.style.left = `${centerX - activeWidth / 2 - stackItemWidth - offset}px`;
          leftItem.style.zIndex = zIndex;
          leftItem.style.opacity = opacity;
          leftItem.style.transform = `translateX(${offset}px) scale(${0.8 - 0.05 * distanceFromActive})`;
        }

        const rightStackCount = totalItems - currentIndex - 1;
        for (let i = 1; i <= rightStackCount; i++) {
          const rightItem = colorItemElements[currentIndex + i];
          const offset = stackItemOffset * i;
          const zIndex = 5 - i;
          const opacity = Math.max(0.3, stackItemOpacity - 0.1 * i);

          rightItem.style.left = `${centerX + activeWidth / 2 + offset}px`;
          rightItem.style.zIndex = zIndex;
          rightItem.style.opacity = opacity;
          rightItem.style.transform = `translateX(-${offset}px) scale(${0.8 - 0.05 * i})`;
        }

        updateStackCounter(leftStackCount, rightStackCount);
      }

      function updateStackCounter(leftCount, rightCount) {
        let leftCounter = document.querySelector(".left-stack-counter");
        let rightCounter = document.querySelector(".right-stack-counter");

        if (!leftCounter) {
          leftCounter = document.createElement("div");
          leftCounter.className = "left-stack-counter absolute top-0 left-0 bg-gray-800 text-white px-2 py-1 rounded-bl z-20";
          colorGalleryContainer.appendChild(leftCounter);
        }

        if (!rightCounter) {
          rightCounter = document.createElement("div");
          rightCounter.className = "right-stack-counter absolute top-0 right-0 bg-gray-800 text-white px-2 py-1 rounded-br z-20";
          colorGalleryContainer.appendChild(rightCounter);
        }

        leftCounter.textContent = leftCount > 0 ? `← ${leftCount}` : "";
        rightCounter.textContent = rightCount > 0 ? `${rightCount} →` : "";
      }

      function updateActiveColor(index) {
        activeColorIndex = index;
        updateStackLayout(index);
      }

      function addNavigationButtons() {
        let prevBtn = document.querySelector(".stack-prev-btn");
        let nextBtn = document.querySelector(".stack-next-btn");

        if (!prevBtn) {
          prevBtn = document.createElement("button");
          prevBtn.className = "stack-prev-btn absolute left-4 top-1/2 transform -translate-y-1/2 bg-black bg-opacity-50 text-white rounded-full p-2 z-20";
          prevBtn.innerHTML = "←";
          colorGalleryContainer.appendChild(prevBtn);
        }

        if (!nextBtn) {
          nextBtn = document.createElement("button");
          nextBtn.className = "stack-next-btn absolute right-4 top-1/2 transform -translate-y-1/2 bg-black bg-opacity-50 text-white rounded-full p-2 z-20";
          nextBtn.innerHTML = "→";
          colorGalleryContainer.appendChild(nextBtn);
        }

        prevBtn.addEventListener("click", () => {
          const prevIndex = (activeColorIndex - 1 + colorItemElements.length) % colorItemElements.length;
          updateActiveColor(prevIndex);
        });

        nextBtn.addEventListener("click", () => {
          const nextIndex = (activeColorIndex + 1) % colorItemElements.length;
          updateActiveColor(nextIndex);
        });
      }

      colorItemElements.forEach((item) => {
        item.addEventListener("click", () => {
          const index = parseInt(item.getAttribute("data-index"));
          updateActiveColor(index);
        });
      });

      addNavigationButtons();
      updateActiveColor(0);
      startAutoSlide();

      colorGalleryContainer.addEventListener("mouseenter", () => {
        stopAutoSlide();
      });

      colorGalleryContainer.addEventListener("mouseleave", () => {
        startAutoSlide();
      });
    };

    initColorGallery();
  });
</script>
</Layout>