---
import Layout from '../layouts/Layout.astro';
---

<Layout title="首頁 | 公司名稱">
<!-- 頂部固定導航欄 -->
<header class="fixed top-0 left-0 right-0 z-50 flex justify-center px-4 py-4">
  <!-- 灰色圓角背景條 (設置最大寬度) -->
  <div class="bg-gray-600 rounded-full flex justify-between items-center px-6 py-2 max-w-5xl w-full">
    <!-- 左側 LOGO -->
    <div class="logo-container">
      <div class="text-white text-2xl font-bold">LOGO</div>
      <!-- 替換為您的 LOGO 圖片 -->
      <!-- <img src="/img/logo.svg" alt="公司 LOGO" class="h-10"> -->
    </div>
    
    <!-- 右側導航選單 -->
    <nav class="main-nav">
      <ul class="flex">
        <li><a href="/about" class="px-5 py-2 block text-white hover:text-blue-200 transition-colors">認識我們</a></li>
        <li><a href="/products" class="px-5 py-2 block text-white hover:text-blue-200 transition-colors">產品介紹</a></li>
        <li><a href="/services" class="px-5 py-2 block text-white hover:text-blue-200 transition-colors">服務領域</a></li>
        <li><a href="/contact" class="px-5 py-2 block text-white hover:text-blue-200 transition-colors">聯絡我們</a></li>
      </ul>
    </nav>
  </div>
</header>

  <!-- 全屏背景和中央內容 -->
  <main class="h-screen w-full bg-black flex flex-col justify-center items-center relative">
    <!-- 背景圖片 - 使用 Canvas 替代靜態圖片 -->
    <div class="absolute inset-0 z-0">
      <!-- <canvas id="colorSpotlight" class="w-full h-full"></canvas> -->
    </div>
    
    <!-- 中央內容 -->
    <div class="z-10 text-center max-w-2xl px-4">
      <h1 class="text-5xl font-bold text-white mb-4">一段文字大標</h1>
      <p class="text-xl text-gray-300 mb-8">還有一些次要文案、跟一些華而不實的文字們（應該）</p>
    </div>
    
    <!-- 向下滾動按鈕 -->
    <div class="absolute bottom-10 left-1/2 transform -translate-x-1/2 z-10">
      <button id="scroll-down" class="bg-white rounded-full px-6 py-2 text-black font-bold hover:bg-opacity-90 transition-all">
        SCROLL
      </button>
    </div>
  </main>

  <!-- 內容區塊 -->
  <section id="content-section" class="bg-gray-100 py-20">
    <div class="container mx-auto px-4">
      <h2 class="text-3xl font-bold text-center mb-12 text-black">企業簡介</h2>
      
      <div class="max-w-4xl mx-auto">
        <p class="text-lg mb-6 text-black">
          青山依舊在，幾度夕陽紅。慣看秋月春風。一壺濁酒喜相逢，浪花淘盡英雄。是非成敗轉頭空，滾滾長江東逝水，白髮漁樵江渚上，古今多少事，都付笑談中。
        </p>
        <p class="text-lg mb-6 text-black">
          青山依舊在，幾度夕陽紅。慣看秋月春風。一壺濁酒喜相逢，浪花淘盡英雄。是非成敗轉頭空，滾滾長江東逝水，白髮漁樵江渚上，古今多少事，都付笑談中。
        </p>
        <div class="intro-carousel-container slider-container relative max-w-4xl mx-auto h-80 bg-gray-700 rounded-xl overflow-hidden">
            <!-- 輪播項目 (這裡示範三張圖片) -->
            <div class="intro-carousel-item absolute inset-0 opacity-100 transition-opacity duration-1000 flex items-center justify-center">
              <p class="text-white text-xl">圖片自動更換 1</p>
            </div>
            <div class="intro-carousel-item absolute inset-0 opacity-0 transition-opacity duration-1000 flex items-center justify-center">
              <p class="text-white text-xl">圖片自動更換 2</p>
            </div>
            <div class="intro-carousel-item absolute inset-0 opacity-0 transition-opacity duration-1000 flex items-center justify-center">
              <p class="text-white text-xl">圖片自動更換 3</p>
            </div>
            
            <!-- 輪播控制點 -->
            <div class="absolute bottom-4 left-0 right-0 flex justify-center space-x-2">
              <button data-slide="0" class="intro-carousel-dot w-3 h-3 rounded-full bg-white"></button>
              <button data-slide="1" class="intro-carousel-dot w-3 h-3 rounded-full bg-gray-400"></button>
              <button data-slide="2" class="intro-carousel-dot w-3 h-3 rounded-full bg-gray-400"></button>
            </div>
        </div>
      </div>
    </div>
  </section>

  <!-- 圖片自動輪播區塊 -->
  <section class="py-20 bg-gray-800">
    <div class="container mx-auto px-4">
        <h2 class="text-4xl font-bold text-gray-300 text-center mb-6">產品介紹</h2>
        <div class="w-16 h-1 bg-gray-500 mx-auto mb-12"></div>
        
        <div class="max-w-4xl mx-auto text-center mb-16">
          <p class="text-lg text-gray-300 leading-relaxed">
            青山依舊在，幾度夕陽紅。慣看秋月春風。一壺濁酒喜相逢，浪花淘盡英雄。是非成敗轉頭空，滾滾長江東逝水，白髮漁樵江渚上，古今多少事，都付笑談中。
          </p>
        </div>
        
        <!-- 產品特色部分 - 使用堆疊式輪播 -->
        <div class="grid grid-cols-1 gap-8">
            <div class="flex justify-center">
            <div class="color-gallery-container flex rounded-lg overflow-hidden relative">
                <!-- 色塊作為圖片的代表 - 會由JavaScript動態填充 -->
                <div class="color-gallery flex transition-all duration-500" id="color-slider">
                <!-- JavaScript將動態生成10個項目 -->
                </div>
            </div>
            </div>
            
            <!-- 產品特色標題 -->
            <div class="text-center mt-2">
            <h3 class="text-2xl font-bold text-gray-300">產品特色</h3>
            </div>
        </div>
        </div>
    </div>
  </section>

  <!-- 服務領域區塊 -->
  <section class="py-20 bg-gray-100">
    <div class="container mx-auto px-4">
      <h2 class="text-3xl font-bold text-center mb-12 text-black">服務領域</h2>
      
      <div class="grid grid-cols-1 md:grid-cols-3 gap-8">
        {[1, 2, 3].map(i => (
          <div class="service-card p-6 border border-gray-300 rounded-lg hover:shadow-lg transition-all">
            <div class="w-full h-40 bg-gray-300 rounded-lg mb-4"></div>
            <h3 class="text-xl font-semibold mb-2 text-black">服務項目 {i}</h3>
            <p class="text-gray-600">服務項目的簡短描述，介紹主要特點和優勢。</p>
          </div>
        ))}
      </div>
    </div>
  </section>

  <!-- 聯絡我們區塊 -->
  <section class="py-20 bg-gray-800 text-white relative">
    <!-- 大型Contact us標題在左下角 (更靠左) -->
    <div class="absolute bottom-2 left-0 contact-title font-sans mb-[-20px]" style="line-height: 0.8;">
        <h2 class="text-6xl lg:text-9xl font-bold text-gray-100 pl-0 lg:pl-0">Contact us</h2>
    </div>
    
    <div class="container mx-auto px-4">
      <!-- <h2 class="text-3xl font-bold text-center mb-12">聯絡我們</h2> -->
      
      <div class="max-w-4xl mx-auto grid grid-cols-1 md:grid-cols-2 gap-12">
        <div>
          <h3 class="text-xl font-semibold mb-4">聯絡資訊</h3>
          <div class="space-y-4">
            <p class="flex items-center">
              <svg class="w-5 h-5 mr-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z"></path>
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 11a3 3 0 11-6 0 3 3 0 016 0z"></path>
              </svg>
              台北市中山區南京東路二段123號8樓
            </p>
            <p class="flex items-center">
              <svg class="w-5 h-5 mr-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 5a2 2 0 012-2h3.28a1 1 0 01.948.684l1.498 4.493a1 1 0 01-.502 1.21l-2.257 1.13a11.042 11.042 0 005.516 5.516l1.13-2.257a1 1 0 011.21-.502l4.493 1.498a1 1 0 01.684.949V19a2 2 0 01-2 2h-1C9.716 21 3 14.284 3 6V5z"></path>
              </svg>
              (02) 2345-6789
            </p>
            <p class="flex items-center">
              <svg class="w-5 h-5 mr-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 8l7.89 5.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z"></path>
              </svg>
              contact@company.com
            </p>
          </div>
        </div>
        
        <div>
          <h3 class="text-xl font-semibold mb-4">傳送訊息</h3>
          <form class="space-y-4">
            <div>
              <input type="text" placeholder="姓名" class="w-full p-2 rounded bg-gray-700 text-white">
            </div>
            <div>
              <input type="email" placeholder="電子郵件" class="w-full p-2 rounded bg-gray-700 text-white">
            </div>
            <div>
              <textarea rows="4" placeholder="訊息內容" class="w-full p-2 rounded bg-gray-700 text-white"></textarea>
            </div>
            <button type="submit" class="bg-blue-600 text-white px-6 py-2 rounded hover:bg-blue-700 transition-colors">
              送出
            </button>
          </form>
        </div>
      </div>
    </div>
</section>

  <!-- 頁腳 -->
  <footer class="bg-black text-gray-400 py-2">
    <div class="text-center text-xs text-gray-500">
        <p>Copyright © 2025 Yasmine n Coi</p>
      </div>
  </footer>

  <style>
    /* Coverflow 效果樣式 */
    .coverflow-container {
      overflow: visible;
    }
    
    .coverflow-left, .coverflow-center, .coverflow-right {
      transition: all 0.5s ease;
      background-size: cover;
      background-position: center;
      box-shadow: 0 10px 25px rgba(0, 0, 0, 0.5);
    }
    
    .coverflow-center {
      transform: translateZ(100px);
    }
    
    /* 顏色圖庫樣式 */
    .color-gallery-container {
      width: auto;
      overflow: hidden;
      position: relative;
      transition: all 0.5s ease;
      /* 堆疊式輪播新增樣式 */
      perspective: 1000px;
      height: 300px;
      background-color: rgba(0, 0, 0, 0.1);
      border-radius: 8px;
      margin: 0 auto;
      width: 80vw;
    }
    
    .color-gallery-container.expanded {
      max-width: 100%;
      box-shadow: 0 5px 15px rgba(0,0,0,0.3);
    }
    
    .color-gallery {
      display: flex;
      width: 100%;
      height: 100%;
      position: relative;
    }
    
    .color-item {
      transition: all 0.5s ease;
      cursor: pointer;
      min-width: 4rem; /* 確保每個顏色方塊的最小寬度 */
      /* 堆疊式輪播新增樣式 */
      position: absolute;
      border-radius: 8px;
      box-shadow: 0 4px 8px rgba(0, 0, 0, 0.3);
      overflow: hidden;
    }
    
    .color-item.active-item {
      box-shadow: 0 8px 16px rgba(0, 0, 0, 0.5);
    }
    
    .color-item:hover {
      transform: scale(1.05);
    }
    
    /* 導航按鈕樣式 */
    .stack-prev-btn, .stack-next-btn {
      width: 40px;
      height: 40px;
      font-size: 20px;
      display: flex;
      align-items: center;
      justify-content: center;
      cursor: pointer;
      transition: all 0.3s ease;
      opacity: 0.7;
    }
    
    .stack-prev-btn:hover, .stack-next-btn:hover {
      background-color: rgba(0, 0, 0, 0.7);
      opacity: 1;
    }
    
    /* 堆疊計數器樣式 */
    .left-stack-counter, .right-stack-counter {
      font-size: 14px;
      font-weight: bold;
      padding: 4px 8px;
      background-color: rgba(0, 0, 0, 0.6);
      border-radius: 4px;
      margin: 8px;
    }
    
    /* 動畫效果 */
    @keyframes pulse {
      0% {
        transform: scale(1);
      }
      50% {
        transform: scale(1.05);
      }
      100% {
        transform: scale(1);
      }
    }
    
    .color-item.active {
      animation: pulse 2s infinite;
      z-index: 10;
    }
    
    @media (max-width: 768px) {
      .coverflow-left {
        left: 20%;
        width: 50px;
        height: 50px;
      }
      
      .coverflow-right {
        left: 80%;
        width: 50px;
        height: 50px;
      }
      
      .coverflow-center {
        width: 200px;
        height: 200px;
      }
      
      .color-gallery-container {
        max-width: 90vw;
        height: 250px;
      }
      
      .color-item {
        min-width: 2.5rem;
      }
      
      .stack-prev-btn, .stack-next-btn {
        width: 30px;
        height: 30px;
        font-size: 16px;
      }
    }
    
    /* 調整 Contact us 文字樣式 */
    .contact-title {
      line-height: 0.8;
      margin-left: -0.5rem; /* 負 margin 使文字更靠近邊緣 */
    }
    
    /* 在不同螢幕尺寸上調整文字位置 */
    @media (max-width: 768px) {
      .contact-title {
        margin-left: -0.25rem;
      }
    }
    </style>
    
    <script>
    // 滾動按鈕功能與圖片輪播功能
    document.addEventListener('DOMContentLoaded', () => {
      // 原有的滾動按鈕功能
      const scrollButton = document.getElementById('scroll-down');
      const contentSection = document.getElementById('content-section');
      if (scrollButton && contentSection) {
        scrollButton.addEventListener('click', () => {
          contentSection.scrollIntoView({ behavior: 'smooth' });
        });
      }
      
      // 也檢查 products-section (為了兼容兩種可能的 ID)
      const productsSection = document.getElementById('products-section');
      if (scrollButton && productsSection && !contentSection) {
        scrollButton.addEventListener('click', () => {
          productsSection.scrollIntoView({ behavior: 'smooth' });
        });
      }
    
      // 企業簡介輪播功能
      const introCarouselItems = document.querySelectorAll('.intro-carousel-item');
      const introCarouselDots = document.querySelectorAll('.intro-carousel-dot');
      
      // 只有在找到輪播元素時才初始化輪播功能
      if (introCarouselItems.length > 0 && introCarouselDots.length > 0) {
        let introCurrentSlide = 0;
        let introAutoSlideInterval;
        
        // 初始化輪播控制點點擊事件
        introCarouselDots.forEach((dot, index) => {
          dot.addEventListener('click', () => {
            showIntroSlide(index);
          });
        });
        
        // 顯示指定的輪播項目
        function showIntroSlide(index) {
          // 隱藏所有輪播項目
          introCarouselItems.forEach(item => {
            item.classList.remove('opacity-100');
            item.classList.add('opacity-0');
          });
          
          // 重置所有控制點
          introCarouselDots.forEach(dot => {
            dot.classList.remove('bg-white');
            dot.classList.add('bg-gray-400');
          });
          
          // 顯示指定輪播項目
          if (introCarouselItems[index]) {
            introCarouselItems[index].classList.remove('opacity-0');
            introCarouselItems[index].classList.add('opacity-100');
          }
          
          // 高亮顯示對應控制點
          if (introCarouselDots[index]) {
            introCarouselDots[index].classList.remove('bg-gray-400');
            introCarouselDots[index].classList.add('bg-white');
          }
          
          // 更新當前輪播項目索引
          introCurrentSlide = index;
        }
        
        // 自動輪播
        function introAutoSlide() {
          let nextSlide = (introCurrentSlide + 1) % introCarouselItems.length;
          showIntroSlide(nextSlide);
        }
        
        // 設置自動輪播
        introAutoSlideInterval = setInterval(introAutoSlide, 5000);
        
        // 當鼠標懸停在輪播上時暫停自動輪播
        const introCarouselContainer = document.querySelector('.intro-carousel-container');
        if (introCarouselContainer) {
          introCarouselContainer.addEventListener('mouseenter', () => {
            clearInterval(introAutoSlideInterval);
          });
          
          introCarouselContainer.addEventListener('mouseleave', () => {
            introAutoSlideInterval = setInterval(introAutoSlide, 5000);
          });
        }
      }
      
      // 顏色圖庫功能 - 改造為堆疊式輪播
      const initColorGallery = () => {
        const colorGalleryContainer = document.querySelector('.color-gallery-container');
        const colorGalleryArrow = document.querySelector('.color-gallery-arrow');
        const colorSlider = document.getElementById('color-slider');
        
        if (!colorSlider || !colorGalleryContainer) return;
        
        // 清空原有內容，重新建立10張照片
        colorSlider.innerHTML = '';
        
        // 輪播圖片數據 - 10張照片
        const colorItems = [
          { index: 0, color: 'bg-gray-200' },
          { index: 1, color: 'bg-gray-300' },
          { index: 2, color: 'bg-gray-400' },
          { index: 3, color: 'bg-gray-500' },
          { index: 4, color: 'bg-gray-600' },
          { index: 5, color: 'bg-gray-700' },
          { index: 6, color: 'bg-gray-800' },
          { index: 7, color: 'bg-blue-500' },
          { index: 8, color: 'bg-blue-600' },
          { index: 9, color: 'bg-blue-700' }
        ];
        
        // 建立照片元素
        colorItems.forEach(item => {
          const colorItem = document.createElement('div');
          colorItem.className = `color-item ${item.color} cursor-pointer`;
          colorItem.setAttribute('data-index', item.index);
          
          // 增加照片編號顯示
          const label = document.createElement('span');
          label.className = 'text-white font-bold flex items-center justify-center h-full';
          label.textContent = item.index + 1;
          colorItem.appendChild(label);
          
          colorSlider.appendChild(colorItem);
        });
        
        // 重新獲取所有項目元素
        const colorItemElements = document.querySelectorAll('.color-item');
        
        let activeColorIndex = 0;
        let isExpanded = false;
        let autoSlideInterval;
        
        // 自動輪播功能
        const startAutoSlide = () => {
          autoSlideInterval = setInterval(() => {
            if (!isExpanded) {
              const nextIndex = (activeColorIndex + 1) % colorItemElements.length;
              updateActiveColor(nextIndex, true);
            }
          }, 5000);
        };
        
        const stopAutoSlide = () => {
          clearInterval(autoSlideInterval);
        };
        
        // 堆疊式照片布局
        function updateStackLayout(currentIndex) {
          const totalItems = colorItemElements.length;
          const centerX = colorGalleryContainer.offsetWidth / 2;
          const centerY = colorGalleryContainer.offsetHeight / 2;
          const activeWidth = colorGalleryContainer.offsetWidth * 0.6; // 活動項目寬度為容器的60%
          const stackItemWidth = 40; // 堆疊項目的寬度
          const stackItemOffset = 10; // 堆疊項目之間的偏移量
          const stackItemOpacity = 0.8; // 堆疊項目的透明度
          
          // 先隱藏所有項目
          colorItemElements.forEach(item => {
            item.style.position = 'absolute';
            item.style.width = `${stackItemWidth}px`;
            item.style.height = '100%';
            item.style.opacity = stackItemOpacity;
            item.style.transition = 'all 0.5s ease';
            item.style.transform = 'translateX(0) scale(0.8)';
            item.style.zIndex = '1';
            item.classList.remove('active-item');
          });
          
          // 設置當前項目
          const activeItem = colorItemElements[currentIndex];
          if (activeItem) {
            activeItem.style.width = `${activeWidth}px`;
            activeItem.style.left = `${centerX - (activeWidth / 2)}px`;
            activeItem.style.opacity = '1';
            activeItem.style.zIndex = '10';
            activeItem.style.transform = 'scale(1)';
            activeItem.classList.add('active-item');
          }
          
          // 左側堆疊 (currentIndex之前的項目)
          const leftStackCount = currentIndex;
          for (let i = 0; i < leftStackCount; i++) {
            const leftItem = colorItemElements[i];
            const distanceFromActive = currentIndex - i;
            const offset = stackItemOffset * distanceFromActive;
            const zIndex = 5 - distanceFromActive;
            const opacity = Math.max(0.3, stackItemOpacity - (0.1 * distanceFromActive));
            
            leftItem.style.left = `${centerX - (activeWidth / 2) - stackItemWidth - offset}px`;
            leftItem.style.zIndex = zIndex;
            leftItem.style.opacity = opacity;
            leftItem.style.transform = `translateX(${offset}px) scale(${0.8 - (0.05 * distanceFromActive)})`;
          }
          
          // 右側堆疊 (currentIndex之後的項目)
          const rightStackCount = totalItems - currentIndex - 1;
          for (let i = 1; i <= rightStackCount; i++) {
            const rightItem = colorItemElements[currentIndex + i];
            const offset = stackItemOffset * i;
            const zIndex = 5 - i;
            const opacity = Math.max(0.3, stackItemOpacity - (0.1 * i));
            
            rightItem.style.left = `${centerX + (activeWidth / 2) + offset}px`;
            rightItem.style.zIndex = zIndex;
            rightItem.style.opacity = opacity;
            rightItem.style.transform = `translateX(-${offset}px) scale(${0.8 - (0.05 * i)})`;
          }
          
          // 顯示左右堆疊的計數
          updateStackCounter(leftStackCount, rightStackCount);
        }
        
        // 更新左右堆疊計數器
        function updateStackCounter(leftCount, rightCount) {
          // 檢查計數器是否存在，如果不存在則創建
          let leftCounter = document.querySelector('.left-stack-counter');
          let rightCounter = document.querySelector('.right-stack-counter');
          
          if (!leftCounter) {
            leftCounter = document.createElement('div');
            leftCounter.className = 'left-stack-counter absolute top-0 left-0 bg-gray-800 text-white px-2 py-1 rounded-bl z-20';
            colorGalleryContainer.appendChild(leftCounter);
          }
          
          if (!rightCounter) {
            rightCounter = document.createElement('div');
            rightCounter.className = 'right-stack-counter absolute top-0 right-0 bg-gray-800 text-white px-2 py-1 rounded-br z-20';
            colorGalleryContainer.appendChild(rightCounter);
          }
          
          // 更新計數器內容
          leftCounter.textContent = leftCount > 0 ? `← ${leftCount}` : '';
          rightCounter.textContent = rightCount > 0 ? `${rightCount} →` : '';
        }
        
        // 更新高亮的顏色
        function updateActiveColor(index, triggerCoverflow = true) {
          activeColorIndex = index;
          
          // 更新堆疊式布局
          updateStackLayout(index);
          
          // 同時更新 Coverflow 中的圖片
          if (triggerCoverflow && window.goToCarouselSlide) {
            window.goToCarouselSlide(index);
          }
        }
        
        // 增加左右導航按鈕
        function addNavigationButtons() {
          let prevBtn = document.querySelector('.stack-prev-btn');
          let nextBtn = document.querySelector('.stack-next-btn');
          
          if (!prevBtn) {
            prevBtn = document.createElement('button');
            prevBtn.className = 'stack-prev-btn absolute left-4 top-1/2 transform -translate-y-1/2 bg-black bg-opacity-50 text-white rounded-full p-2 z-20';
            prevBtn.innerHTML = '←';
            colorGalleryContainer.appendChild(prevBtn);
          }
          
          if (!nextBtn) {
            nextBtn = document.createElement('button');
            nextBtn.className = 'stack-next-btn absolute right-4 top-1/2 transform -translate-y-1/2 bg-black bg-opacity-50 text-white rounded-full p-2 z-20';
            nextBtn.innerHTML = '→';
            colorGalleryContainer.appendChild(nextBtn);
          }
          
          // 綁定事件
          prevBtn.addEventListener('click', () => {
            const prevIndex = (activeColorIndex - 1 + colorItemElements.length) % colorItemElements.length;
            updateActiveColor(prevIndex, true);
          });
          
          nextBtn.addEventListener('click', () => {
            const nextIndex = (activeColorIndex + 1) % colorItemElements.length;
            updateActiveColor(nextIndex, true);
          });
        }
        
        // 鍵盤控制
        document.addEventListener('keydown', (e) => {
          // 左箭頭鍵 - 上一張
          if (e.key === 'ArrowLeft') {
            const prevIndex = (activeColorIndex - 1 + colorItemElements.length) % colorItemElements.length;
            updateActiveColor(prevIndex, true);
          }
          // 右箭頭鍵 - 下一張
          else if (e.key === 'ArrowRight') {
            const nextIndex = (activeColorIndex + 1) % colorItemElements.length;
            updateActiveColor(nextIndex, true);
          }
        });
        
        // 綁定點擊事件
        colorItemElements.forEach((item) => {
          item.addEventListener('click', () => {
            const index = parseInt(item.getAttribute('data-index'));
            updateActiveColor(index, true);
          });
        });
        
        // 初始化
        addNavigationButtons();
        updateActiveColor(0, true);
        startAutoSlide();
        
        // 鼠標事件
        colorGalleryContainer.addEventListener('mouseenter', () => {
          stopAutoSlide();
        });
        
        colorGalleryContainer.addEventListener('mouseleave', () => {
          startAutoSlide();
        });
        
        // 觸控支援
        let touchStartX = 0;
        
        colorGalleryContainer.addEventListener('touchstart', (e) => {
          touchStartX = e.touches[0].clientX;
          stopAutoSlide();
        });
        
        colorGalleryContainer.addEventListener('touchend', (e) => {
          const touchEndX = e.changedTouches[0].clientX;
          const diffX = touchEndX - touchStartX;
          
          if (diffX > 50) {
            // 向右滑動，切換到上一張
            const prevIndex = (activeColorIndex - 1 + colorItemElements.length) % colorItemElements.length;
            updateActiveColor(prevIndex, true);
          } else if (diffX < -50) {
            // 向左滑動，切換到下一張
            const nextIndex = (activeColorIndex + 1) % colorItemElements.length;
            updateActiveColor(nextIndex, true);
          }
          
          startAutoSlide();
        });
        
        // 向外暴露方法以便其他功能可以調用
        window.updateActiveColor = updateActiveColor;
      };
      
      // 初始化顏色圖庫
      initColorGallery();
      
      // 初始化 Coverflow 輪播
      const coverflowInit = () => {
        // 輪播相關元素
        const coverflowContainer = document.querySelector('.coverflow-container');
        const prevButton = document.getElementById('coverflow-prev');
        const nextButton = document.getElementById('coverflow-next');
        const dots = document.querySelectorAll('.carousel-dot');
        
        if (!coverflowContainer) return; // 如果找不到容器，直接返回
        
        // 輪播資料 (與顏色項目相同數量)
        const slides = [
          { id: 0, title: '產品圖片 1', bgClass: 'bg-gray-200' },
          { id: 1, title: '產品圖片 2', bgClass: 'bg-gray-300' },
          { id: 2, title: '產品圖片 3', bgClass: 'bg-gray-400' },
          { id: 3, title: '產品圖片 4', bgClass: 'bg-gray-500' },
          { id: 4, title: '產品圖片 5', bgClass: 'bg-gray-600' },
          { id: 5, title: '產品圖片 6', bgClass: 'bg-gray-700' },
          { id: 6, title: '產品圖片 7', bgClass: 'bg-gray-800' },
          { id: 7, title: '產品圖片 8', bgClass: 'bg-blue-500' },
          { id: 8, title: '產品圖片 9', bgClass: 'bg-blue-600' },
          { id: 9, title: '產品圖片 10', bgClass: 'bg-blue-700' }
        ];
        
        let currentIndex = 0;
        
        // 跳到指定索引
        const goToSlide = (index) => {
          currentIndex = index;
          // 可以在這裡添加其他需要的邏輯
        };
        
        // 將 goToSlide 函數暴露到全局以便其他功能可以使用
        window.goToCarouselSlide = goToSlide;
        
        return {
          goToSlide
        };
      };
      
      // 初始化 Coverflow 輪播
      const coverflow = coverflowInit();
    });
    </script>
</Layout>